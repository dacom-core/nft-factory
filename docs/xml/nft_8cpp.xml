<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="nft_8cpp" kind="file" language="C++">
    <compoundname>nft.cpp</compoundname>
    <includes refid="nft_8hpp" local="yes">nft.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>nft.cpp</label>
        <link refid="nft_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nft.hpp</label>
        <link refid="nft_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>algorithm</label>
      </node>
      <node id="4">
        <label>cmath</label>
      </node>
      <node id="10">
        <label>eosio/action.hpp</label>
      </node>
      <node id="6">
        <label>eosio/asset.hpp</label>
      </node>
      <node id="9">
        <label>eosio/contract.hpp</label>
      </node>
      <node id="13">
        <label>eosio/datastream.hpp</label>
      </node>
      <node id="5">
        <label>eosio/eosio.hpp</label>
      </node>
      <node id="8">
        <label>eosio/multi_index.hpp</label>
      </node>
      <node id="12">
        <label>eosio/print.hpp</label>
      </node>
      <node id="11">
        <label>eosio/system.hpp</label>
      </node>
      <node id="7">
        <label>eosio/time.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="nft_8cpp_1a569d3d0ca7b56fb8c580faaa3d73179a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apply</definition>
        <argsstring>(uint64_t receiver, uint64_t code, uint64_t action)</argsstring>
        <name>apply</name>
        <param>
          <type>uint64_t</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>code</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nft.cpp" line="890" column="9" bodyfile="nft.cpp" bodystart="890" bodyend="944"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nft.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>uint64_t<sp/>nft::get_global_id(eosio::name<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>counts_index<sp/><ref refid="structcounts" kindref="compound">counts</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>count<sp/>=<sp/><ref refid="structcounts" kindref="compound">counts</ref>.find(key.value);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>==<sp/><ref refid="structcounts" kindref="compound">counts</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcounts" kindref="compound">counts</ref>.emplace(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;c){</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.key<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.value<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>count<sp/>-&gt;<sp/>value<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcounts" kindref="compound">counts</ref>.modify(count,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;c){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.value<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>nft::add_balance(eosio::name<sp/>payer,<sp/>eosio::asset<sp/>quantity,<sp/>eosio::name<sp/>contract){</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(payer);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>balances_index<sp/>balances(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/>payer.value);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>balances_by_contract_and_symbol<sp/>=<sp/>balances.template<sp/>get_index&lt;</highlight><highlight class="stringliteral">&quot;byconsym&quot;</highlight><highlight class="normal">_n&gt;();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>contract_and_symbol_index<sp/>=<sp/>combine_ids(contract.value,<sp/>quantity.symbol.code().raw());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structbalance" kindref="compound">balance</ref><sp/>=<sp/>balances_by_contract_and_symbol.find(contract_and_symbol_index);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structbalance" kindref="compound">balance</ref><sp/><sp/>==<sp/>balances_by_contract_and_symbol.end()){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>balances.emplace(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.id<sp/>=<sp/>balances.available_primary_key();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.contract<sp/>=<sp/>contract;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.quantity<sp/>=<sp/>quantity;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>balances_by_contract_and_symbol.modify(<ref refid="structbalance" kindref="compound">balance</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.quantity<sp/>+=<sp/>quantity;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>nft::sub_balance(eosio::name<sp/>username,<sp/>eosio::asset<sp/>quantity,<sp/>eosio::name<sp/>contract){</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>balances_index<sp/>balances(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/>username.value);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>balances_by_contract_and_symbol<sp/>=<sp/>balances.template<sp/>get_index&lt;</highlight><highlight class="stringliteral">&quot;byconsym&quot;</highlight><highlight class="normal">_n&gt;();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>contract_and_symbol_index<sp/>=<sp/>combine_ids(contract.value,<sp/>quantity.symbol.code().raw());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structbalance" kindref="compound">balance</ref><sp/>=<sp/>balances_by_contract_and_symbol.find(contract_and_symbol_index);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(<ref refid="structbalance" kindref="compound">balance</ref><sp/>!=<sp/>balances_by_contract_and_symbol.end(),<sp/></highlight><highlight class="stringliteral">&quot;Balance<sp/>is<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(<ref refid="structbalance" kindref="compound">balance</ref><sp/>-&gt;<sp/>quantity<sp/>&gt;=<sp/>quantity,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>enought<sp/>user<sp/>balance<sp/>for<sp/>create<sp/>order&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structbalance" kindref="compound">balance</ref><sp/>-&gt;<sp/>quantity<sp/>==<sp/>quantity)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>balances_by_contract_and_symbol.erase(<ref refid="structbalance" kindref="compound">balance</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>balances_by_contract_and_symbol.modify(<ref refid="structbalance" kindref="compound">balance</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.quantity<sp/>-=<sp/>quantity;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>nft::sub_pieces(eosio::name<sp/>ram_payer,<sp/>uint64_t<sp/>object_id,<sp/>eosio::name<sp/>from,<sp/>uint64_t<sp/>sub_pieces){</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>pieces_index<sp/><ref refid="structpieces" kindref="compound">pieces</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>object_and_user<sp/>=<sp/>combine_ids(object_id,<sp/>from.value);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pieces_by_object_and_users<sp/>=<sp/><ref refid="structpieces" kindref="compound">pieces</ref>.template<sp/>get_index&lt;</highlight><highlight class="stringliteral">&quot;byobjanduser&quot;</highlight><highlight class="normal">_n&gt;();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>piece<sp/>=<sp/>pieces_by_object_and_users.find(object_and_user);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(piece<sp/>!=<sp/>pieces_by_object_and_users.end(),<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>dont<sp/>have<sp/>pieces<sp/>for<sp/>sell&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(piece<sp/>-&gt;<sp/><ref refid="structpieces" kindref="compound">pieces</ref><sp/>&gt;=<sp/>sub_pieces,<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>dont<sp/>have<sp/>enought<sp/>pieces<sp/>for<sp/>sell&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(piece<sp/>-&gt;<sp/><ref refid="structpieces" kindref="compound">pieces</ref><sp/>==<sp/>sub_pieces){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pieces_by_object_and_users.erase(piece);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pieces_by_object_and_users.modify(piece,<sp/>ram_payer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;p){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.pieces<sp/>-=<sp/>sub_pieces;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>nft::add_pieces(eosio::name<sp/>ram_payer,<sp/>uint64_t<sp/>object_id,<sp/>eosio::name<sp/>to,<sp/>uint64_t<sp/>add_pieces){</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>pieces_index<sp/><ref refid="structpieces" kindref="compound">pieces</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>object_and_user<sp/>=<sp/>combine_ids(object_id,<sp/>to.value);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pieces_by_object_and_users<sp/>=<sp/><ref refid="structpieces" kindref="compound">pieces</ref>.template<sp/>get_index&lt;</highlight><highlight class="stringliteral">&quot;byobjanduser&quot;</highlight><highlight class="normal">_n&gt;();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>piece<sp/>=<sp/>pieces_by_object_and_users.find(object_and_user);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(piece<sp/>==<sp/>pieces_by_object_and_users.end())<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>get_global_id(</highlight><highlight class="stringliteral">&quot;pieces&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpieces" kindref="compound">pieces</ref>.emplace(ram_payer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;p)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.id<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.object_id<sp/>=<sp/>object_id;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.owner<sp/>=<sp/>to;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.pieces<sp/>=<sp/>add_pieces;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pieces_by_object_and_users.modify(piece,<sp/>ram_payer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;p){</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.pieces<sp/>+=<sp/>add_pieces;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>nft::add_scores(eosio::name<sp/>payer,<sp/>eosio::name<sp/>username,<sp/>uint64_t<sp/>new_solded_pieces,<sp/>uint64_t<sp/>new_buyed_pieces,<sp/>uint64_t<sp/>new_score){</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>scores_index<sp/><ref refid="structscores" kindref="compound">scores</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>score<sp/>=<sp/><ref refid="structscores" kindref="compound">scores</ref>.find(username.value);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/>==<sp/><ref refid="structscores" kindref="compound">scores</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structscores" kindref="compound">scores</ref>.emplace(payer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;s)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.username<sp/>=<sp/>username;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.solded_pieces<sp/>=<sp/>new_solded_pieces;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.buyed_pieces<sp/>=<sp/>new_buyed_pieces;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.scores<sp/>=<sp/>new_score;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structscores" kindref="compound">scores</ref>.modify(score,<sp/>payer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;s){</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.solded_pieces<sp/>+=<sp/>new_solded_pieces;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.buyed_pieces<sp/>+=<sp/>new_buyed_pieces;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.scores<sp/>+=<sp/>new_score;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>[[eosio::action]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__public__actions_1ga5f9f2d754e00c38d3df25b85052ae782" kindref="member">nft::create</ref>(eosio::name<sp/>creator,<sp/>eosio::name<sp/>lang,<sp/>std::string<sp/>title,<sp/>std::string<sp/>description,<sp/>uint64_t<sp/>total_pieces,<sp/>eosio::name<sp/>category,<sp/>std::string<sp/>images,<sp/>std::string<sp/>ipns,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>creator_can_emit_new_pieces,<sp/>std::string<sp/>meta){</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(creator);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>objects_index<sp/><ref refid="structobjects" kindref="compound">objects</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>object_id<sp/>=<sp/>get_global_id(</highlight><highlight class="stringliteral">&quot;objects&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structobjects" kindref="compound">objects</ref>.emplace(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;o)<sp/>{<sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.id<sp/>=<sp/>object_id;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.creator<sp/>=<sp/>creator;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.lang<sp/>=<sp/>lang;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.title<sp/>=<sp/>title;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.description<sp/>=<sp/>description;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.category<sp/>=<sp/>category;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.images<sp/>=<sp/>images;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.ipns<sp/>=<sp/>ipns;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.total_pieces<sp/>=<sp/>total_pieces;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.creator_can_emit_new_pieces<sp/>=<sp/>creator_can_emit_new_pieces;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.meta<sp/>=<sp/>meta;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>pieces_index<sp/><ref refid="structpieces" kindref="compound">pieces</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpieces" kindref="compound">pieces</ref>.emplace(creator,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;p)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.id<sp/>=<sp/>get_global_id(</highlight><highlight class="stringliteral">&quot;pieces&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.object_id<sp/>=<sp/>object_id;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.owner<sp/>=<sp/>creator;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.pieces<sp/>=<sp/>total_pieces;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>[[eosio::action]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__public__actions_1gaacf79d90d466fa01b5d48235f234bf7e" kindref="member">nft::remove</ref>(eosio::name<sp/>creator,<sp/>uint64_t<sp/>object_id)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(creator);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>objects_index<sp/><ref refid="structobjects" kindref="compound">objects</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/><ref refid="structobjects" kindref="compound">objects</ref>.find(object_id);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>!=<sp/><ref refid="structobjects" kindref="compound">objects</ref>.end(),<sp/></highlight><highlight class="stringliteral">&quot;NFT<sp/>is<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>-&gt;<sp/>creator<sp/>==<sp/>creator,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>creator<sp/>can<sp/>remove<sp/>this<sp/>NFT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>pieces_index<sp/><ref refid="structpieces" kindref="compound">pieces</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>object_and_user<sp/>=<sp/>combine_ids(object_id,<sp/>creator.value);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pieces_by_object_and_users<sp/>=<sp/><ref refid="structpieces" kindref="compound">pieces</ref>.template<sp/>get_index&lt;</highlight><highlight class="stringliteral">&quot;byobjanduser&quot;</highlight><highlight class="normal">_n&gt;();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>piece<sp/>=<sp/>pieces_by_object_and_users.find(object_and_user);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(piece<sp/>-&gt;<sp/><ref refid="structpieces" kindref="compound">pieces</ref><sp/>==<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>-&gt;<sp/>total_pieces,<sp/></highlight><highlight class="stringliteral">&quot;Cant<sp/>remove<sp/>NFT<sp/>which<sp/>already<sp/>solded&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>pieces_by_object_and_users.erase(piece);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structobjects" kindref="compound">objects</ref>.erase(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>[[eosio::action]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__public__actions_1gad81581a9b320f394b41f7ca5e7d361cd" kindref="member">nft::edit</ref>(eosio::name<sp/>creator,<sp/>uint64_t<sp/>object_id,<sp/>std::string<sp/>title,<sp/>std::string<sp/>description,<sp/>std::string<sp/>images,<sp/>std::string<sp/>ipns,<sp/>eosio::name<sp/>category,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>creator_can_emit_new_pieces,<sp/>std::string<sp/>meta)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(creator);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>objects_index<sp/><ref refid="structobjects" kindref="compound">objects</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/><ref refid="structobjects" kindref="compound">objects</ref>.find(object_id);<sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>!=<sp/><ref refid="structobjects" kindref="compound">objects</ref>.end(),<sp/></highlight><highlight class="stringliteral">&quot;NFT<sp/>is<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(creator<sp/>==<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>-&gt;<sp/>creator,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>creator<sp/>can<sp/>edit<sp/>NFT<sp/>for<sp/>now&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//creator<sp/>CAN<sp/>only<sp/>disable<sp/>emitting<sp/>|<sp/>after<sp/>disable<sp/>cant<sp/>enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(creator_can_emit_new_pieces<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>-&gt;<sp/>creator_can_emit_new_pieces<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>NFT<sp/>already<sp/>prohibit<sp/>emitting<sp/>pieces<sp/>for<sp/>creators&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structobjects" kindref="compound">objects</ref>.modify(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>creator,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;o)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.title<sp/>=<sp/>title;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.description<sp/>=<sp/>description;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.images<sp/>=<sp/>images;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.ipns<sp/>=<sp/>ipns;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.category<sp/>=<sp/>category;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.creator_can_emit_new_pieces<sp/>=<sp/>creator_can_emit_new_pieces;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>[[eosio::action]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__public__actions_1ga2001b87b1817d59568c89895ff01b115" kindref="member">nft::sell</ref>(eosio::name<sp/>seller,<sp/>uint64_t<sp/>object_id,<sp/>uint64_t<sp/>pieces_to_sell,<sp/>eosio::name<sp/>token_contract,<sp/>eosio::asset<sp/>one_piece_price,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>buyer_can_offer_price,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>with_delivery,<sp/>std::string<sp/>delivery_from,<sp/>std::vector&lt;eosio::name&gt;<sp/>delivery_methods,<sp/>std::vector&lt;eosio::name&gt;<sp/>delivery_operators,<sp/>std::string<sp/>meta)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(seller);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>objects_index<sp/><ref refid="structobjects" kindref="compound">objects</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/><ref refid="structobjects" kindref="compound">objects</ref>.find(object_id);<sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>!=<sp/><ref refid="structobjects" kindref="compound">objects</ref>.end(),<sp/></highlight><highlight class="stringliteral">&quot;NFT<sp/>is<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>sub_pieces(seller,<sp/>object_id,<sp/>seller,<sp/>pieces_to_sell);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>market_index<sp/>markets(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>itr<sp/>=<sp/>std::find(delivery_methods.begin(),<sp/>delivery_methods.end(),<sp/></highlight><highlight class="stringliteral">&quot;selfdelivery&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(itr<sp/>!=<sp/>delivery_methods.end(),<sp/></highlight><highlight class="stringliteral">&quot;Now<sp/>only<sp/>self-delivery<sp/>method<sp/>is<sp/>possible&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(delivery_operators.size()<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Now<sp/>delivery<sp/>operators<sp/>is<sp/>not<sp/>accepted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>markets.emplace(seller,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;o)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.id<sp/>=<sp/>get_global_id(</highlight><highlight class="stringliteral">&quot;markets&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.object_id<sp/>=<sp/>object_id;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.seller<sp/>=<sp/>seller;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.is_auction<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.lang<sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>-&gt;<sp/>lang;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.status<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;waiting&quot;</highlight><highlight class="normal">_n;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.remain_pieces<sp/>=<sp/>pieces_to_sell;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.one_piece_price<sp/>=<sp/>one_piece_price;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.total_price<sp/>=<sp/>one_piece_price<sp/>*<sp/>pieces_to_sell;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.buyer_can_offer_price<sp/>=<sp/>buyer_can_offer_price;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.with_delivery<sp/>=<sp/>with_delivery;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.token_contract<sp/>=<sp/>token_contract;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.delivery_from<sp/>=<sp/>delivery_from;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.delivery_methods<sp/>=<sp/>delivery_methods;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.delivery_operators<sp/>=<sp/>delivery_operators;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.sales_start_at<sp/>=<sp/>eosio::time_point_sec(eosio::current_time_point().sec_since_epoch());</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.sales_closed_at<sp/>=<sp/>eosio::time_point_sec<sp/>(-1);<sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.meta<sp/>=<sp/>meta;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>[[eosio::action]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__public__actions_1ga8c5ecb40e30b9eb6b9119894c4273cff" kindref="member">nft::buy</ref>(eosio::name<sp/>buyer,<sp/>uint64_t<sp/>market_id,<sp/>eosio::name<sp/>lang,<sp/>uint64_t<sp/>requested_pieces,<sp/>eosio::asset<sp/>one_piece_price,<sp/>std::string<sp/>delivery_to,<sp/>eosio::name<sp/>delivery_method,<sp/>eosio::name<sp/>delivery_operator,<sp/>std::string<sp/>meta){</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(buyer);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>market_index<sp/>markets(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>=<sp/>markets.find(market_id);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(<ref refid="structmarket" kindref="compound">market</ref><sp/>!=<sp/>markets.end(),<sp/></highlight><highlight class="stringliteral">&quot;Object<sp/>is<sp/>not<sp/>found<sp/>on<sp/>the<sp/>market&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(<ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>remain_pieces<sp/>&gt;=<sp/>requested_pieces,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>enought<sp/>pieces<sp/>on<sp/>the<sp/>market&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(<ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>one_piece_price.symbol<sp/>==<sp/>one_piece_price.symbol,<sp/></highlight><highlight class="stringliteral">&quot;Symbols<sp/>is<sp/>not<sp/>equal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(<ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>seller<sp/>!=<sp/>buyer,<sp/></highlight><highlight class="stringliteral">&quot;Seller<sp/>cannot<sp/>be<sp/>buyer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(<ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>status<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;pause&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;Market<sp/>on<sp/>pause&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>itr<sp/>=<sp/>std::find(<ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>delivery_methods.begin(),<sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>delivery_methods.end(),<sp/>delivery_method);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(itr<sp/>!=<sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>delivery_methods.end(),<sp/></highlight><highlight class="stringliteral">&quot;Delivery<sp/>method<sp/>is<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(delivery_operator<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;Delivery<sp/>operator<sp/>is<sp/>not<sp/>supported<sp/>for<sp/>now&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>buyer_can_offer_price<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(<ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>one_piece_price.amount<sp/>==<sp/>one_piece_price.amount,<sp/></highlight><highlight class="stringliteral">&quot;Buyer<sp/>cant<sp/>offer<sp/>the<sp/>price.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::asset<sp/>total_price<sp/>=<sp/>one_piece_price<sp/>*<sp/>requested_pieces;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>sub_balance(buyer,<sp/>total_price,<sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>token_contract);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>objects_index<sp/><ref refid="structobjects" kindref="compound">objects</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/><ref refid="structobjects" kindref="compound">objects</ref>.find(<ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>object_id);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>with_delivery<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>||<sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>buyer_can_offer_price<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>requests_index<sp/><ref refid="structrequests" kindref="compound">requests</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structrequests" kindref="compound">requests</ref>.emplace(buyer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;r)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.id<sp/>=<sp/>get_global_id(</highlight><highlight class="stringliteral">&quot;requests&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.market_id<sp/>=<sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>id;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structmarket_1a566e0dc0c21b7cf57f8e9a005d91ee65" kindref="member">seller</ref><sp/>=<sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>seller;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.buyer<sp/>=<sp/>buyer;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structmarket_1a76827b0c4006f50a200a70cdfa8009f4" kindref="member">lang</ref><sp/>=<sp/>lang;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.requested_pieces<sp/>=<sp/>requested_pieces;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.total_price<sp/>=<sp/>total_price;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.one_piece_price<sp/>=<sp/>one_piece_price;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.total_payed<sp/>=<sp/>total_price;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.status<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;waiting&quot;</highlight><highlight class="normal">_n;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.delivery_to<sp/>=<sp/>delivery_to;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.delivery_fee<sp/>=<sp/>asset(0,<sp/>one_piece_price.symbol);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.delivery_method<sp/>=<sp/>delivery_method;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.delivery_operator<sp/>=<sp/>delivery_operator;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.meta<sp/>=<sp/>meta;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>markets.modify(<ref refid="structmarket" kindref="compound">market</ref>,<sp/>buyer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;o)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>buyer_can_offer_price<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>||<sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>with_delivery<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.blocked_pieces<sp/>+=<sp/>requested_pieces;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_pieces(buyer,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>-&gt;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>buyer,<sp/>requested_pieces);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_scores(buyer,<sp/>buyer,<sp/>0,<sp/>requested_pieces,<sp/>0);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_scores(buyer,<sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>seller,<sp/>requested_pieces,<sp/>0<sp/>,<sp/>0);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>remain_pieces<sp/>==<sp/>requested_pieces)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>markets.erase(<ref refid="structmarket" kindref="compound">market</ref>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>markets.modify(<ref refid="structmarket" kindref="compound">market</ref>,<sp/>buyer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;o)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.remain_pieces<sp/>-=<sp/>requested_pieces;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>[[eosio::action]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__public__actions_1gad4df61b42ae7cb4c662ecc75c5a3897a" kindref="member">nft::cancelsell</ref>(eosio::name<sp/>seller,<sp/>uint64_t<sp/>market_id){</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(seller);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>market_index<sp/>markets(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>=<sp/>markets.find(market_id);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(<ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>seller<sp/>==<sp/>seller,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>sell<sp/>can<sp/>cancel<sp/>process&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(<ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>blocked_pieces<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>markets<sp/>with<sp/>none<sp/>blocked<sp/>pieces<sp/>can<sp/>be<sp/>canceled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>add_pieces(seller,<sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>object_id,<sp/>seller,<sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>remain_pieces);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>markets.erase(<ref refid="structmarket" kindref="compound">market</ref>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>[[eosio::action]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__public__actions_1ga83a1e293c4324f06c2462e4091883ade" kindref="member">nft::acceptreq</ref>(eosio::name<sp/>seller,<sp/>uint64_t<sp/>request_id)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(seller);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>requests_index<sp/><ref refid="structrequests" kindref="compound">requests</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>request<sp/>=<sp/><ref refid="structrequests" kindref="compound">requests</ref>.find(request_id);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(request<sp/>!=<sp/><ref refid="structrequests" kindref="compound">requests</ref>.end(),<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>is<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(request<sp/>-&gt;<sp/>seller<sp/>==<sp/>seller,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>seller<sp/>can<sp/>accept<sp/>request&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(request<sp/>-&gt;<sp/>status<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;waiting&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>requests<sp/>on<sp/>waiting<sp/>status<sp/>can<sp/>be<sp/>accepted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>market_index<sp/>markets(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>=<sp/>markets.find(request<sp/>-&gt;<sp/>market_id);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>with_delivery<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structrequests" kindref="compound">requests</ref>.modify(request,<sp/>seller,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;r){</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.status<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;payed&quot;</highlight><highlight class="normal">_n;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>markets.modify(<ref refid="structmarket" kindref="compound">market</ref>,<sp/>seller,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;m){</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.remain_pieces<sp/>-=<sp/>request-&gt;requested_pieces;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.blocked_pieces<sp/>+=<sp/>request-&gt;requested_pieces;<sp/><sp/></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_pieces(seller,<sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>object_id,<sp/>request<sp/>-&gt;<sp/>buyer,<sp/>request<sp/>-&gt;<sp/>requested_pieces);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_scores(seller,<sp/>request<sp/>-&gt;<sp/>buyer,<sp/>0,<sp/>request<sp/>-&gt;<sp/>requested_pieces,<sp/>0);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_scores(seller,<sp/>request<sp/>-&gt;<sp/>seller,<sp/>request<sp/>-&gt;<sp/>requested_pieces,<sp/>0<sp/>,<sp/>0);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structrequests" kindref="compound">requests</ref>.erase(request);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>markets.modify(<ref refid="structmarket" kindref="compound">market</ref>,<sp/>seller,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;m){</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.remain_pieces<sp/>-=<sp/>request-&gt;requested_pieces;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>[[eosio::action]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__public__actions_1ga053222099a3c56a45c5c3b4edabd9096" kindref="member">nft::declinereq</ref>(eosio::name<sp/>seller,<sp/>uint64_t<sp/>request_id)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(seller);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>requests_index<sp/><ref refid="structrequests" kindref="compound">requests</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>request<sp/>=<sp/><ref refid="structrequests" kindref="compound">requests</ref>.find(request_id);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(request<sp/>!=<sp/><ref refid="structrequests" kindref="compound">requests</ref>.end(),<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>is<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(request<sp/>-&gt;<sp/>seller<sp/>==<sp/>seller,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>seller<sp/>can<sp/>decline<sp/>request&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(request<sp/>-&gt;<sp/>status<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;waiting&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>requests<sp/>on<sp/>waiting<sp/>status<sp/>can<sp/>be<sp/>declined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>market_index<sp/>markets(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>=<sp/>markets.find(request<sp/>-&gt;<sp/>market_id);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>buyer_can_offer_price<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>||<sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>with_delivery<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>markets.modify(<ref refid="structmarket" kindref="compound">market</ref>,<sp/>seller,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;o)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.blocked_pieces<sp/>-=<sp/>request<sp/>-&gt;<sp/>requested_pieces;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>action(</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>permission_level{<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">_n<sp/>},</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmarket" kindref="compound">market</ref>-&gt;<ref refid="structmarket_1a2d0fc4fffe1e28833615acacad39201f" kindref="member">token_contract</ref>,<sp/></highlight><highlight class="stringliteral">&quot;transfer&quot;</highlight><highlight class="normal">_n,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_tuple(<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/>request<sp/>-&gt;<sp/>buyer,<sp/>request<sp/>-&gt;<sp/>total_payed,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Declined<sp/>request&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>).send();</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequests" kindref="compound">requests</ref>.modify(request,<sp/>seller,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;r){</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.status<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;declined&quot;</highlight><highlight class="normal">_n;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.total_payed<sp/>-=<sp/>request<sp/>-&gt;<sp/>total_payed;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>[[eosio::action]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__public__actions_1gabfcdcab948de423e9f38cbd713561a97" kindref="member">nft::cancelreq</ref>(eosio::name<sp/>buyer,<sp/>uint64_t<sp/>request_id){</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(buyer);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>requests_index<sp/><ref refid="structrequests" kindref="compound">requests</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>request<sp/>=<sp/><ref refid="structrequests" kindref="compound">requests</ref>.find(request_id);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(request<sp/>!=<sp/><ref refid="structrequests" kindref="compound">requests</ref>.end(),<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>is<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(request<sp/>-&gt;<sp/>buyer<sp/>==<sp/>buyer,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>buyer<sp/>can<sp/>cancel<sp/>request&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(request<sp/>-&gt;<sp/>status<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;waiting&quot;</highlight><highlight class="normal">_n<sp/>||<sp/>request<sp/>-&gt;<sp/>status<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;declined&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>requests<sp/>on<sp/>waiting<sp/>status<sp/>can<sp/>be<sp/>canceled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request<sp/>-&gt;<sp/>status<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;waiting&quot;</highlight><highlight class="normal">_n)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>market_index<sp/>markets(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>=<sp/>markets.find(request<sp/>-&gt;<sp/>market_id);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>action(</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>permission_level{<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">_n<sp/>},</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmarket" kindref="compound">market</ref>-&gt;<ref refid="structmarket_1a2d0fc4fffe1e28833615acacad39201f" kindref="member">token_contract</ref>,<sp/></highlight><highlight class="stringliteral">&quot;transfer&quot;</highlight><highlight class="normal">_n,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_tuple(<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/>buyer,<sp/>request<sp/>-&gt;<sp/>total_price,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Cancel<sp/>request&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>).send();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequests" kindref="compound">requests</ref>.erase(request);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>[[eosio::action]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__public__actions_1ga3e1209994e92fcb1a84d0b830ffa4fb8" kindref="member">nft::setdelstatus</ref>(eosio::name<sp/>delivery_operator,<sp/>uint64_t<sp/>request_id,<sp/>eosio::name<sp/>status){</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(delivery_operator);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>requests_index<sp/><ref refid="structrequests" kindref="compound">requests</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>request<sp/>=<sp/><ref refid="structrequests" kindref="compound">requests</ref>.find(request_id);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(request<sp/>!=<sp/><ref refid="structrequests" kindref="compound">requests</ref>.end(),<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>is<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(delivery_operator<sp/>==<sp/>request<sp/>-&gt;<sp/>seller,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>seller<sp/>can<sp/>confirm<sp/>delivery<sp/>for<sp/>now&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(request<sp/>-&gt;<sp/>status<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;payed&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>payed<sp/>requests<sp/>can<sp/>be<sp/>delivered&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(status<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;finish&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>finish<sp/>status<sp/>are<sp/>accepted<sp/>for<sp/>now&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>market_index<sp/>markets(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>=<sp/>markets.find(request<sp/>-&gt;<sp/>market_id);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>markets.modify(<ref refid="structmarket" kindref="compound">market</ref>,<sp/>delivery_operator,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;m){</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.blocked_pieces<sp/>-=<sp/>request<sp/>-&gt;<sp/>requested_pieces;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>add_pieces(delivery_operator,<sp/><ref refid="structmarket" kindref="compound">market</ref><sp/>-&gt;<sp/>object_id,<sp/>request<sp/>-&gt;<sp/>buyer,<sp/>request<sp/>-&gt;<sp/>requested_pieces);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>add_scores(delivery_operator,<sp/>request<sp/>-&gt;<sp/>buyer,<sp/>0,<sp/>request<sp/>-&gt;<sp/>requested_pieces,<sp/>0);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>add_scores(delivery_operator,<sp/>request<sp/>-&gt;<sp/>seller,<sp/>request<sp/>-&gt;<sp/>requested_pieces,<sp/>0<sp/>,<sp/>0);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>action(</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>permission_level{<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">_n<sp/>},</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmarket" kindref="compound">market</ref>-&gt;<ref refid="structmarket_1a2d0fc4fffe1e28833615acacad39201f" kindref="member">token_contract</ref>,<sp/></highlight><highlight class="stringliteral">&quot;transfer&quot;</highlight><highlight class="normal">_n,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_tuple(<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/>request<sp/>-&gt;<sp/>seller,<sp/>request<sp/>-&gt;<sp/>total_price,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Delivered<sp/>request&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>).send();</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrequests" kindref="compound">requests</ref>.erase(request);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/>[[eosio::action]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__public__actions_1ga2ad33fcad6d3dd98dc91d14f381807b0" kindref="member">nft::emit</ref>(eosio::name<sp/>emitter,<sp/>uint64_t<sp/>object_id,<sp/>uint64_t<sp/>pieces_for_emit){</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(emitter);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>objects_index<sp/><ref refid="structobjects" kindref="compound">objects</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/><ref refid="structobjects" kindref="compound">objects</ref>.find(object_id);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>!=<sp/><ref refid="structobjects" kindref="compound">objects</ref>.end(),<sp/></highlight><highlight class="stringliteral">&quot;Cant<sp/>find<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>-&gt;<sp/>creator_can_emit_new_pieces<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Prohibit<sp/>emit<sp/>new<sp/>pieces&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>whitelist_index<sp/><ref refid="structwhitelist" kindref="compound">whitelist</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>whitelist_by_object_and_users<sp/>=<sp/><ref refid="structwhitelist" kindref="compound">whitelist</ref>.template<sp/>get_index&lt;</highlight><highlight class="stringliteral">&quot;byobjanduser&quot;</highlight><highlight class="normal">_n&gt;();</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>object_and_user<sp/>=<sp/>combine_ids(object_id,<sp/>emitter.value);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wl<sp/>=<sp/>whitelist_by_object_and_users.find(object_and_user);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(wl<sp/>!=<sp/>whitelist_by_object_and_users.end()<sp/>||<sp/>object<sp/>-&gt;<sp/>creator<sp/>==<sp/>emitter,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>users<sp/>from<sp/>whitelist<sp/>or<sp/>creator<sp/>can<sp/>emit<sp/>new<sp/>pieces&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structobjects" kindref="compound">objects</ref>.modify(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>emitter,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;o){</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>o.total_pieces<sp/>+=<sp/>pieces_for_emit;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>add_pieces(emitter,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>-&gt;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>emitter,<sp/>pieces_for_emit);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>[[eosio::action]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__public__actions_1ga35aa30744ed57b5512ff6d03d85ce77c" kindref="member">nft::addtowl</ref>(eosio::name<sp/>creator,<sp/>uint64_t<sp/>object_id,<sp/>eosio::name<sp/>username){</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(creator);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>whitelist_index<sp/><ref refid="structwhitelist" kindref="compound">whitelist</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>objects_index<sp/><ref refid="structobjects" kindref="compound">objects</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/><ref refid="structobjects" kindref="compound">objects</ref>.find(object_id);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>!=<sp/><ref refid="structobjects" kindref="compound">objects</ref>.end(),<sp/></highlight><highlight class="stringliteral">&quot;Object<sp/>is<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>-&gt;<sp/>creator_can_emit_new_pieces<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Creator<sp/>cannot<sp/>emit<sp/>new<sp/>pieces<sp/>and<sp/>use<sp/>whitelist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>whitelist_by_object_and_users<sp/>=<sp/><ref refid="structwhitelist" kindref="compound">whitelist</ref>.template<sp/>get_index&lt;</highlight><highlight class="stringliteral">&quot;byobjanduser&quot;</highlight><highlight class="normal">_n&gt;();</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>object_and_user<sp/>=<sp/>combine_ids(object_id,<sp/>username.value);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wl<sp/>=<sp/>whitelist_by_object_and_users.find(object_and_user);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(wl<sp/>==<sp/>whitelist_by_object_and_users.end(),<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>is<sp/>already<sp/>in<sp/>a<sp/>whitelist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwhitelist" kindref="compound">whitelist</ref>.emplace(creator,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;w){</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w.id<sp/>=<sp/>get_global_id(</highlight><highlight class="stringliteral">&quot;whitelists&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w.object_id<sp/>=<sp/>object_id;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w.username<sp/>=<sp/>username;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>[[eosio::action]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__public__actions_1ga1340b486a1b568d2f1f67239c33b3a18" kindref="member">nft::delfromwl</ref>(eosio::name<sp/>creator,<sp/>uint64_t<sp/>object_id,<sp/>eosio::name<sp/>username){</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(creator);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>whitelist_index<sp/><ref refid="structwhitelist" kindref="compound">whitelist</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>objects_index<sp/><ref refid="structobjects" kindref="compound">objects</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/><ref refid="structobjects" kindref="compound">objects</ref>.find(object_id);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>!=<sp/><ref refid="structobjects" kindref="compound">objects</ref>.end(),<sp/></highlight><highlight class="stringliteral">&quot;Object<sp/>is<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>-&gt;<sp/>creator_can_emit_new_pieces<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Creator<sp/>cannot<sp/>emit<sp/>new<sp/>pieces<sp/>and<sp/>use<sp/>whitelist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>whitelist_by_object_and_users<sp/>=<sp/><ref refid="structwhitelist" kindref="compound">whitelist</ref>.template<sp/>get_index&lt;</highlight><highlight class="stringliteral">&quot;byobjanduser&quot;</highlight><highlight class="normal">_n&gt;();</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>object_and_user<sp/>=<sp/>combine_ids(object_id,<sp/>username.value);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wl<sp/>=<sp/>whitelist_by_object_and_users.find(object_and_user);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(wl<sp/>!=<sp/>whitelist_by_object_and_users.end(),<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>is<sp/>not<sp/>exist<sp/>in<sp/>a<sp/>whitelist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>whitelist_by_object_and_users.erase(wl);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>[[eosio::action]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__public__actions_1ga3ec5cb2f8cbd31ef1b3e466569579fdc" kindref="member">nft::setreview</ref>(eosio::name<sp/>buyer,<sp/>uint64_t<sp/>object_id,<sp/>std::string<sp/>message,<sp/>uint64_t<sp/>score,<sp/>std::string<sp/>meta){</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(buyer);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>objects_index<sp/><ref refid="structobjects" kindref="compound">objects</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/><ref refid="structobjects" kindref="compound">objects</ref>.find(object_id);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>!=<sp/><ref refid="structobjects" kindref="compound">objects</ref>.end(),<sp/></highlight><highlight class="stringliteral">&quot;Object<sp/>is<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>pieces_index<sp/><ref refid="structpieces" kindref="compound">pieces</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>object_and_user<sp/>=<sp/>combine_ids(object_id,<sp/>buyer.value);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pieces_by_object_and_users<sp/>=<sp/><ref refid="structpieces" kindref="compound">pieces</ref>.template<sp/>get_index&lt;</highlight><highlight class="stringliteral">&quot;byobjanduser&quot;</highlight><highlight class="normal">_n&gt;();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>piece<sp/>=<sp/>pieces_by_object_and_users.find(object_and_user);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(piece<sp/>!=<sp/>pieces_by_object_and_users.end(),<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>dont<sp/>have<sp/>pieces<sp/>for<sp/>make<sp/>a<sp/>review&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>review_index<sp/><ref refid="structreviews" kindref="compound">reviews</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reviews_by_object_and_users<sp/>=<sp/><ref refid="structreviews" kindref="compound">reviews</ref>.template<sp/>get_index&lt;</highlight><highlight class="stringliteral">&quot;byobjanduser&quot;</highlight><highlight class="normal">_n&gt;();</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>review<sp/>=<sp/>reviews_by_object_and_users.find(object_and_user);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(review<sp/>!=<sp/>reviews_by_object_and_users.end())<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(review<sp/>-&gt;<sp/><ref refid="structpieces" kindref="compound">pieces</ref><sp/>&gt;<sp/>piece<sp/>-&gt;<sp/><ref refid="structpieces" kindref="compound">pieces</ref>,<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>dont<sp/>have<sp/>any<sp/>new<sp/>pieces<sp/>for<sp/>make<sp/>a<sp/>new<sp/>review&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(score<sp/>&lt;=<sp/>5<sp/>&amp;&amp;<sp/>score<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Score<sp/>should<sp/>be<sp/>between<sp/>0<sp/>and<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structreviews" kindref="compound">reviews</ref>.emplace(buyer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;r)<sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.id<sp/>=<sp/>get_global_id(</highlight><highlight class="stringliteral">&quot;rewiews&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.object_id<sp/>=<sp/>object_id;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.buyer<sp/>=<sp/>buyer;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.pieces<sp/>=<sp/>piece<sp/>-&gt;<sp/><ref refid="structpieces" kindref="compound">pieces</ref>;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.review<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.score<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.meta<sp/>=<sp/>meta;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>add_scores(object-&gt;creator,<sp/>object-&gt;creator,<sp/>0,<sp/>0,<sp/>score);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>[[eosio::action]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__public__actions_1ga89e5e85bcdc4fa92eec9eef882dffdce" kindref="member">nft::sendmessage</ref>(eosio::name<sp/>username,<sp/>uint64_t<sp/>request_id,<sp/>eosio::name<sp/>lang,<sp/>std::string<sp/>message){</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(username);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>requests_index<sp/><ref refid="structrequests" kindref="compound">requests</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>request<sp/>=<sp/><ref refid="structrequests" kindref="compound">requests</ref>.find(request_id);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(request<sp/>!=<sp/><ref refid="structrequests" kindref="compound">requests</ref>.end(),<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(request<sp/>-&gt;<sp/>buyer<sp/>==<sp/>username<sp/>||<sp/>request<sp/>-&gt;<sp/>seller<sp/>==<sp/>username,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>buyer<sp/>or<sp/>seller<sp/>can<sp/>send<sp/>messages&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>messages_index<sp/><ref refid="structmessages" kindref="compound">messages</ref>(<ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>,<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">_me</ref>.value);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmessages" kindref="compound">messages</ref>.emplace(username,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;m){</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.id<sp/>=<sp/>get_global_id(</highlight><highlight class="stringliteral">&quot;messages&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.request_id<sp/>=<sp/>request_id;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.lang<sp/>=<sp/>lang;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.username<sp/>=<sp/>username;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.message<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>apply(<sp/>uint64_t<sp/>receiver,<sp/>uint64_t<sp/>code,<sp/>uint64_t<sp/>action<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">nft::_me</ref>.value)<sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;create&quot;</highlight><highlight class="normal">_n.value)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execute_action(name(receiver),<sp/>name(code),<sp/>&amp;<ref refid="group__public__actions_1ga5f9f2d754e00c38d3df25b85052ae782" kindref="member">nft::create</ref>);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;remove&quot;</highlight><highlight class="normal">_n.value)<sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execute_action(name(receiver),<sp/>name(code),<sp/>&amp;<ref refid="group__public__actions_1gaacf79d90d466fa01b5d48235f234bf7e" kindref="member">nft::remove</ref>);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;edit&quot;</highlight><highlight class="normal">_n.value)<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execute_action(name(receiver),<sp/>name(code),<sp/>&amp;<ref refid="group__public__actions_1gad81581a9b320f394b41f7ca5e7d361cd" kindref="member">nft::edit</ref>);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sell&quot;</highlight><highlight class="normal">_n.value)<sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execute_action(name(receiver),<sp/>name(code),<sp/>&amp;<ref refid="group__public__actions_1ga2001b87b1817d59568c89895ff01b115" kindref="member">nft::sell</ref>);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;buy&quot;</highlight><highlight class="normal">_n.value)<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execute_action(name(receiver),<sp/>name(code),<sp/>&amp;<ref refid="group__public__actions_1ga8c5ecb40e30b9eb6b9119894c4273cff" kindref="member">nft::buy</ref>);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sendmessage&quot;</highlight><highlight class="normal">_n.value)<sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execute_action(name(receiver),<sp/>name(code),<sp/>&amp;<ref refid="group__public__actions_1ga89e5e85bcdc4fa92eec9eef882dffdce" kindref="member">nft::sendmessage</ref>);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;cancelsell&quot;</highlight><highlight class="normal">_n.value)<sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execute_action(name(receiver),<sp/>name(code),<sp/>&amp;<ref refid="group__public__actions_1gad4df61b42ae7cb4c662ecc75c5a3897a" kindref="member">nft::cancelsell</ref>);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;emit&quot;</highlight><highlight class="normal">_n.value)<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execute_action(name(receiver),<sp/>name(code),<sp/>&amp;<ref refid="group__public__actions_1ga2ad33fcad6d3dd98dc91d14f381807b0" kindref="member">nft::emit</ref>);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;acceptreq&quot;</highlight><highlight class="normal">_n.value)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execute_action(name(receiver),<sp/>name(code),<sp/>&amp;<ref refid="group__public__actions_1ga83a1e293c4324f06c2462e4091883ade" kindref="member">nft::acceptreq</ref>);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;declinereq&quot;</highlight><highlight class="normal">_n.value)<sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execute_action(name(receiver),<sp/>name(code),<sp/>&amp;<ref refid="group__public__actions_1ga053222099a3c56a45c5c3b4edabd9096" kindref="member">nft::declinereq</ref>);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;cancelreq&quot;</highlight><highlight class="normal">_n.value)<sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execute_action(name(receiver),<sp/>name(code),<sp/>&amp;<ref refid="group__public__actions_1gabfcdcab948de423e9f38cbd713561a97" kindref="member">nft::cancelreq</ref>);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;addtowl&quot;</highlight><highlight class="normal">_n.value)<sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execute_action(name(receiver),<sp/>name(code),<sp/>&amp;<ref refid="group__public__actions_1ga35aa30744ed57b5512ff6d03d85ce77c" kindref="member">nft::addtowl</ref>);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;delfromwl&quot;</highlight><highlight class="normal">_n.value)<sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execute_action(name(receiver),<sp/>name(code),<sp/>&amp;<ref refid="group__public__actions_1ga1340b486a1b568d2f1f67239c33b3a18" kindref="member">nft::delfromwl</ref>);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;setreview&quot;</highlight><highlight class="normal">_n.value)<sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execute_action(name(receiver),<sp/>name(code),<sp/>&amp;<ref refid="group__public__actions_1ga3ec5cb2f8cbd31ef1b3e466569579fdc" kindref="member">nft::setreview</ref>);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;setdelstatus&quot;</highlight><highlight class="normal">_n.value)<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execute_action(name(receiver),<sp/>name(code),<sp/>&amp;<ref refid="group__public__actions_1ga3e1209994e92fcb1a84d0b830ffa4fb8" kindref="member">nft::setdelstatus</ref>);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;transfer&quot;</highlight><highlight class="normal">_n.value)<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">transfer{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::name<sp/>from;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::name<sp/>to;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::asset<sp/>quantity;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>memo;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>op<sp/>=<sp/>eosio::unpack_action_data&lt;transfer&gt;();</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op.to<sp/>==<sp/><ref refid="group__public__consts_1gaef729aa8d7b1644b5d2dd70306863231" kindref="member">nft::_me</ref>)<sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nft::add_balance(op.from,<sp/>op.quantity,<sp/>eosio::name(code));<sp/><sp/></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="945"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="nft.cpp"/>
  </compounddef>
</doxygen>
